{{ if not .Values.postgres.use_external }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-db-postgres
  name: {{ .Release.Name }}-db-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-db-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-db-postgres
    spec:
      containers:
        - name: {{ .Release.Name }}-db-postgres
          image: "{{ .Values.postgres.image.registry }}/{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: {{ .Values.secrets.secret_name }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: {{ .Values.secrets.secret_name }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_NAME
                  name: {{ .Values.secrets.secret_name }}
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  key: PGDATA
                  name: {{ .Release.Name }}-env
          args:
            - postgres
            - -p
            - "{{ .Values.postgres.port }}"
            - -c
            - shared_buffers={{ .Values.postgres.shared_buffer }}
            - -c
            - max_connections={{ .Values.postgres.max_connections }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
      restartPolicy: Always
{{ end }}
